/*
 * Copyright 2021 DeathsGun
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "com.modrinth.minotaur" version "1.2.1"
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id "org.jetbrains.changelog" version "1.3.1"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.7.10"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.5.31'
}

processResources {
    inputs.property "version", project.version
    inputs.property "releaseTarget", project.release_target
    inputs.property "modmenu_version", project.modmenu_version

    filesMatching("fabric.mod.json") {
        expand project.properties
    }
    filesMatching("build.info") {
        expand project.properties
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 17
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
    kotlinOptions.freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
    kotlinOptions.freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

task zip(type: Zip, dependsOn: remapJar) {
    from remapJar
}
build.finalizedBy(zip)


import com.modrinth.minotaur.TaskModrinthUpload
import com.modrinth.minotaur.request.Dependency
import com.modrinth.minotaur.request.VersionType

task publishModrinth(type: TaskModrinthUpload, dependsOn: remapJar) {
    onlyIf {
        System.getenv("MODRINTH")
    }

    token = System.getenv("MODRINTH")
    projectId = "6kq7BzRK"
    versionNumber = version
    uploadFile = remapJar
    versionType = VersionType.RELEASE
    addGameVersion(project.release_target)
    addLoader("fabric")
    addDependency("JPP6w2U1", Dependency.DependencyType.REQUIRED) // Mod Menu
    addDependency("1qsZV7U7", Dependency.DependencyType.REQUIRED) // fabric-language-kotlin
    changelog = this.changelog.getUnreleased().withHeader(false).toText()
}
